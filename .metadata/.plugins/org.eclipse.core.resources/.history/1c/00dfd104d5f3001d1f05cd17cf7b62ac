package com.bank.AccountService;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import java.util.Optional;

import org.junit.jupiter.api.*;

import com.bank.model.Customer;
import com.bank.repository.CustomerRepository;
import com.bank.service.CustomerServiceImp;

public class TestCustomerServiceMock02 {
	private CustomerServiceImp customerServiceMock;
	private CustomerRepository c_repoMock;

	@BeforeEach
	void setup() {
		this.c_repoMock = mock(CustomerRepository.class);
		this.customerServiceMock = new CustomerServiceImp(c_repoMock);
	}

	@Test
	void testRetrieveCustomerById() {
		// given
		Customer customer1 = new Customer(1L, "Mohit", "Bafna", 1234);
		// Mock the customerRepository behavior
		when(c_repoMock.findById(1L)).thenReturn(Optional.of(customer1));

		// when
		// Call the method you want to test
		Optional<Customer> actual = customerServiceMock.getCustomer(1L);

		// then
		// Verify the result
		assertTrue(actual.isPresent());    //should be true -> Test Pass
		assertEquals(customer1, actual.get());
         assertInstanceOf(Customer.class, actual) ;
		// Verify that the customerRepository.findById method was called with the
		// correct argument
		verify(c_repoMock).findById(1L);
	}
}
